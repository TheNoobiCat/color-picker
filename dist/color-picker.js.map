{"version":3,"file":"color-picker.js","sources":["../src/utils/parseHTML.js","../src/defaults.js","../src/utils/convertColors.js","../src/templates.js","../src/events.js","../src/history.js","../src/swatches.js","../src/color-picker.js","../src/utils/isObject.js"],"sourcesContent":["export default (str) => {\r\n  var parser = new DOMParser(),\r\n      node   = parser.parseFromString(str.trim(), \"text/html\")\r\n\r\n  return node.body.firstElementChild\r\n}","export default {\r\n  color: 'white',\r\n  onInput: _=>_,\r\n  onChange: _=>_,\r\n  buttons: {\r\n    undo: {\r\n      icon: '↶',\r\n      title: 'Undo'\r\n    },\r\n    format: {\r\n      icon: '⇆',\r\n      title: 'Switch Color Format'\r\n    },\r\n    add: {\r\n      icon: '+',\r\n      title: 'Add to Swatches'\r\n    }\r\n  }\r\n}","// Based on:\r\n// https://github.com/kohrongying/hex-to-rgba/blob/master/src/helpers.js\r\n\r\nexport const CSStoHEX = hex => hex.match(/\\w\\w/g)\r\nexport const CSStoRGBA = rgba => rgba.match(/\\((.*)\\)/)[1].split(',').map(Number)\r\nexport const CSStoHSLA = hsla => Object.assign([0,0,0,1], hsla.match(/\\((.*)\\)/)[1].split(',').map((v,i) => i != 3 ? parseFloat(v) : v.includes('%') ? parseFloat(v) : parseFloat(v)*100 ))\r\nexport const HSLAtoCSS = hsla => `hsla(${hsla.h}, ${hsla.s}%, ${hsla.l}%, ${hsla.a}%)`\r\n\r\nconst roundNumber = number => number.toFixed(1).replace('.0', '')\r\n\r\nexport const hex_rgba = hex => {\r\n  const [rr, gg, bb, aa] = CSStoHEX(hex),\r\n        [r,g,b] = [rr,gg,bb].map(v => parseInt(v, 16)),\r\n        alpha = aa ? (parseInt(aa, 16) / 255).toFixed(2) : 1\r\n  return `rgba(${r},${g},${b},${alpha})`\r\n}\r\n\r\nexport const any_to_hex = str => {\r\n  var ctx = document.createElement(\"canvas\").getContext(\"2d\"),\r\n      output;\r\n\r\n\tctx.fillStyle = str\r\n\toutput = ctx.fillStyle\r\n\r\n  return output[0] == '#' ? output : rgba_hex(output)\r\n}\r\n\r\nexport const rgba_hex = rgba => {\r\n  const [r,g,b,a] = CSStoRGBA(rgba),\r\n        hex = \"#\" + [r,g,b].map(v => v.toString(16).padStart(2, '0')).join('')\r\n  return rgba.length == 3 ? hex : hex + Math.round(a * 255).toString(16).padStart(2, '0')\r\n}\r\n\r\nexport const rgba_hsla = rgba => {\r\n  let [r,g,b,a] = CSStoRGBA(rgba)\r\n\r\n  r = r / 255\r\n  g = g / 255\r\n  b = b / 255\r\n\r\n  let max = Math.max(r, g, b),\r\n      min = Math.min(r, g, b),\r\n      d = max - min,\r\n\r\n      h = 0,\r\n      s = 0,\r\n      l = ((max + min) / 2).toPrecision(5)\r\n\r\n  if (d){\r\n    s = l > 0.5\r\n      ? d / (2 - max - min)\r\n      : d / (max + min)\r\n\r\n    h = max == r\r\n      ? (g - b) / d + (g < b ? 6 : 0)\r\n      : max == g\r\n        ? h = (b - r) / d + 2\r\n        : h = (r - g) / d + 4\r\n\r\n    h /= 6\r\n  }\r\n\r\n  return {\r\n    h: roundNumber(h * 360),\r\n    s: roundNumber(s * 100),\r\n    l: roundNumber(l * 100),\r\n    a: roundNumber(a * 100)\r\n  }\r\n}\r\n\r\nexport const hexToHsl = hex => rgba_hsla( hex_rgba(hex) )\r\n\r\n/**\r\n * converts any color format to anoter\r\n * @param {String} color\r\n * @param {String} format ['hex', 'rgba', 'hsla']\r\n * @returns a color in another format\r\n */\r\nexport const changeColorFormat = (color, format) => {\r\n  format = (format+\"\").toLowerCase()\r\n  color = any_to_hex(color)\r\n\r\n  return format == 'hex'\r\n      ? color\r\n      : format.startsWith('hsl')\r\n        ? HSLAtoCSS( rgba_hsla( hex_rgba(color) ) )\r\n        : format.startsWith('rgb')\r\n          ? hex_rgba(color)\r\n          : color\r\n}\r\n","import { any_to_hex, HSLAtoCSS } from './utils/convertColors'\r\n\r\nexport function scope() {\r\n  const {h,s,l,a} = this.color\r\n  const className = `color-picker ${this.settings.className||''}`.trim()\r\n\r\n  return `\r\n    <div class='${className}'>\r\n      ${slider({ name:\"hue\", value:h, max:\"360\" })}\r\n      ${slider({ name:\"saturation\", value:s })}\r\n      ${slider({ name:\"lightness\", value:l })}\r\n      ${slider({ name:\"alpha\", value:a })}\r\n      <output></output>\r\n      ${value.call(this, this.color)}\r\n      ${this.swatches ? swatches.call(this, this.swatches, this.initialSwatches) : ''}\r\n    </div>\r\n  `\r\n}\r\n\r\nexport function slider({ name, min = 0, max = 100, value }){\r\n  return `<div class=\"range color-picker__${name}\" title=\"${name}\" style=\"--min:${min}; --max:${max};\">\r\n            <input type=\"range\" name=\"${name}\" value=\"${value}\" min=\"${min}\" max=\"${max}\">\r\n            <output></output>\r\n            <div class='range__progress'></div>\r\n          </div>`\r\n}\r\n\r\nexport function value( color ){\r\n  const { buttons:{undo, format} } = this.settings\r\n\r\n  return `\r\n    <div class='color-picker__value cp-checkboard'>\r\n      <input name='value' inputmode='decimal' placeholder='CSS Color' value='${any_to_hex(HSLAtoCSS(color))}'>\r\n      <button title='${undo.title}' name=\"undo\">${undo.icon}</button>\r\n      <button title='${format.title}' name='format'>${format.icon}</button>\r\n      <div></div>\r\n    </div>\r\n  `\r\n}\r\n\r\nexport function swatches(swatches, initialSwatches){\r\n  const { buttons:{add} } = this.settings\r\n\r\n  return `\r\n    <div class='color-picker__swatches' style='--initial-len:${initialSwatches.length}'>\r\n      <button name='addSwatch' title='${add.title}'>${add.icon}</button>\r\n      ${swatches.map(color => swatch(color, initialSwatches.includes(color))).join('')}\r\n    </div>\r\n  `\r\n}\r\n\r\nexport function swatch(color, isLocked){\r\n  return `<div class=\"cp-checkboard color-picker__swatch\" title=\"${color}\" style=\"--c:${color}\">${isLocked ? '' : '<button name=\"removeSwatch\">&times;</button>'}</div>`\r\n}\r\n\r\n","export function bindEvents(){\r\n  [\r\n    ['scope', 'input' , onInput],\r\n    ['scope', 'change', onRangeChange],\r\n    ['scope', 'click' , onButtonClick],\r\n    ['scope', 'wheel' , onWheelMove],\r\n    ['value', 'change', onValueChange],\r\n  ].forEach(([elm, event, cb]) =>\r\n    this.DOM[elm].addEventListener(event,  cb.bind(this), {pasive:false})\r\n  )\r\n\r\n  window.addEventListener('storage', onStorage.bind(this))\r\n\r\n  // assuming picker uses as a popup\r\n  if( this.settings.onClickOutside ){\r\n    document.body.addEventListener('click', onClickOutside.bind(this))\r\n    window.addEventListener('keydown', onkeydown.bind(this))\r\n  }\r\n}\r\n\r\nfunction onStorage(){\r\n  this.syncGlobalSwatchesWithLocal()\r\n}\r\n\r\nfunction onWheelMove(e){\r\n  // disable window scroll: https://stackoverflow.com/a/23606063/104380\r\n  e.preventDefault()\r\n\r\n  const { value, max } = e.target,\r\n        delta = Math.sign(e.deltaY) * -1 // normalize jump value to either -1 or 1\r\n\r\n  // since the event is on the window object, the callback will be fired in all\r\n  // instances, therefore only the currently \"active\" picker should be used.\r\n  if( value && max ){\r\n    e.target.value = Math.min(Math.max(+value + delta, 0), +max)\r\n    onInput.call(this, e)\r\n  }\r\n}\r\n\r\nfunction onkeydown(e){\r\n  if( e.key == 'Escape' )\r\n    this.settings.onClickOutside(e)\r\n}\r\n\r\nfunction onClickOutside(e){\r\n  if( !this.DOM.scope.contains(e.target) )\r\n    this.settings.onClickOutside(e)\r\n}\r\n\r\nfunction  onInput(e){\r\n  const {name, value, type} = e.target\r\n\r\n  if( type == 'range' ){\r\n    this.setColor({...this.color, [name[0]]: +value})\r\n  }\r\n}\r\n\r\nfunction onRangeChange(e){\r\n  const { type } = e.target\r\n\r\n  if( type == 'range' || type == 'text' ){\r\n    this.history.last = this.color\r\n  }\r\n}\r\n\r\nfunction onValueChange(e){\r\n  this.setColor( this.getHSLA(e.target.value) )\r\n  this.DOM.value.blur()\r\n}\r\n\r\nfunction onButtonClick(e){\r\n  const { name, parentNode:pNode, classList, title } = e.target\r\n\r\n  // switch(name){\r\n  //   case\r\n  // }\r\n  if( name == 'format' )\r\n    this.swithFormat()\r\n\r\n  else if( name == 'undo' )\r\n    this.history.undo()\r\n\r\n  else if( name == 'addSwatch' )\r\n    this.addSwatch()\r\n\r\n  else if( name == 'removeSwatch' )\r\n    this.removeSwatch(pNode, pNode.title)\r\n\r\n  else if( classList.contains('color-picker__swatch') && title ){\r\n    this.history.last = this.color\r\n    this.setColor( this.getHSLA(title) )\r\n  }\r\n}","export default function history(){\r\n  const historyChange = () => this.settings.onChange(this.CSSColor)\r\n  const setColor = this.setColor.bind(this)\r\n\r\n  return {\r\n    _value: [this.color],\r\n    get pop(){\r\n      return this._value.pop()\r\n    },\r\n    get previous(){\r\n      return this._value[this._value.length - 2]\r\n    },\r\n    set last( item ){\r\n      this._value.push(item)\r\n      historyChange()\r\n    },\r\n    undo(){\r\n      // leave one last item in the value array\r\n      if( this._value.length > 1 ){\r\n        // get rid of the current color\r\n        this.pop\r\n\r\n        // get \"new\" last color\r\n        let last = this._value[this._value.length - 1]\r\n\r\n        setColor(last)\r\n        historyChange()\r\n\r\n        return last\r\n      }\r\n    }\r\n  }\r\n}","import parseHTML from './utils/parseHTML'\r\nimport { any_to_hex } from './utils/convertColors'\r\n\r\nconst swatchesIncludes = (swatches, color) => swatches.some(swatch => any_to_hex(swatch) == any_to_hex(color))\r\n\r\nconst storeKey = '@yaireo/color-picker/swatches'\r\n\r\nexport function getSetGlobalSwatches(data){\r\n  // if \"swatchesLocalStorage\" is \"false\", do not save to localstorage\r\n  const _store = this.settings.swatchesLocalStorage,\r\n        customKey = typeof _store == 'string' ? _store : '';\r\n\r\n  if ( _store && data ){\r\n    localStorage.setItem(storeKey + customKey, data)\r\n    dispatchEvent( new Event('storage') )\r\n  }\r\n\r\n  // \"filter(String)\" clean up any empty strings\r\n  return localStorage[storeKey + customKey]?.split(',').filter(String) || []\r\n}\r\n\r\n// sync instance swatches with global ones. skip duplicates\r\nexport function syncGlobalSwatchesWithLocal(){\r\n  this.sharedSwatches = this.getSetGlobalSwatches()\r\n  this.swatches = this.sharedSwatches.concat(this.initialSwatches)\r\n\r\n  // reflect swatches change in the DOM (add/remove)\r\n  // a delay is needed becasue the whole \"swatches\" element is replaced completely\r\n  // if if done immediately, there will be no time for animations (add/remove) and also\r\n  // a \"click outside\" event will be registered\r\n  this.DOM.swatches && setTimeout(()=>{\r\n    const template = parseHTML(this.templates.swatches.call(this, this.swatches, this.initialSwatches))\r\n    this.DOM.swatches.replaceWith(template)\r\n    this.DOM.swatches = template\r\n  }, 500)\r\n}\r\n\r\nexport function addSwatch( color = this.CSSColor ){\r\n  // if already exist, abort\r\n  if( swatchesIncludes(this.swatches, color) ) return\r\n\r\n  // add DOM swatch node\r\n  const swatchElm = parseHTML( this.templates.swatch(color) )\r\n  swatchElm.classList.add('cp_remove')\r\n  this.DOM.swatches.prepend(swatchElm)\r\n  setTimeout(() => swatchElm.classList.remove('cp_remove'), 0)\r\n\r\n  // save swatch to instance state\r\n  this.swatches.unshift(color)\r\n  this.sharedSwatches.unshift(color)\r\n\r\n  // sync localstorage\r\n  this.getSetGlobalSwatches(this.sharedSwatches)\r\n}\r\n\r\nexport function removeSwatch( swatchElm, color ){\r\n  swatchElm.classList.add('cp_remove')\r\n  setTimeout(() => swatchElm.remove(), 200)\r\n\r\n  const notColor = swatch => swatch != color\r\n\r\n  this.swatches = this.swatches.filter(notColor)\r\n  this.sharedSwatches = this.sharedSwatches.filter(notColor)\r\n\r\n  // sync localstorage\r\n  this.getSetGlobalSwatches(this.sharedSwatches)\r\n}\r\n","import parseHTML from './utils/parseHTML'\r\nimport DEFAULTS from './defaults'\r\nimport * as templates from './templates'\r\nimport * as events from './events'\r\nimport history from './history'\r\nimport * as swatches from './swatches'\r\nimport isObject from './utils/isObject'\r\nimport {any_to_hex, hex_rgba, rgba_hsla, CSStoHSLA, HSLAtoCSS, changeColorFormat} from './utils/convertColors'\r\n\r\nvar raf = window.requestAnimationFrame || (cb => window.setTimeout(cb, 1000 / 60))\r\n\r\nfunction ColorPicker(settings){\r\n  this.settings = Object.assign({}, DEFAULTS, settings)\r\n\r\n  const {color, defaultFormat, swatches} = this.settings\r\n\r\n  this.DOM = {}\r\n\r\n  this.sharedSwatches = this.getSetGlobalSwatches() // only this gets syncs with the localstorage (if chosen to)\r\n  this.initialSwatches = swatches || []\r\n  this.swatches = swatches && this.sharedSwatches.concat(this.initialSwatches) // global (shared) via localstorage\r\n  this.color = changeColorFormat(color, defaultFormat)\r\n  this.history = history.call(this)\r\n  this.init()\r\n}\r\n\r\nColorPicker.prototype = {\r\n  templates,\r\n  ...swatches,\r\n  ...events,\r\n\r\n  getColorFormat( color ){\r\n    return color[0] == '#'\r\n        ? 'hex'\r\n        : !color.indexOf('hsl')\r\n          ? 'hsla'\r\n          : !color.indexOf('rgb')\r\n            ? 'rgba'\r\n            : ''\r\n  },\r\n\r\n  /**\r\n   * normalizes any color to HSLA-Object\r\n   * @param {String} color\r\n   */\r\n  getHSLA( color ){\r\n    let result\r\n\r\n    if( !color ) return\r\n\r\n    // if color argument is already an HSLA object, return it as-is\r\n    if( isObject(color) && Object.keys(color).join('').startsWith('hsl'))\r\n      return color\r\n\r\n    this.colorFormat = this.getColorFormat(color)\r\n\r\n    if( !color.indexOf('hsla') ){\r\n      result = CSStoHSLA(color)\r\n      result = { h:result[0], s:result[1], l:result[2], a:result[3] }\r\n    }\r\n\r\n    else{\r\n      color = any_to_hex(color)\r\n      color = hex_rgba(color)\r\n      result = rgba_hsla(color)\r\n    }\r\n\r\n    return result\r\n  },\r\n\r\n  swithFormat(){\r\n    const _cf = this.colorFormat\r\n\r\n    switch( _cf ){\r\n      case '':\r\n      case 'hex':\r\n        this.colorFormat = 'rgba'\r\n        break\r\n      case 'rgba':\r\n        this.colorFormat = 'hsla'\r\n        break\r\n      case 'hsla':\r\n        this.colorFormat = 'hex'\r\n        break\r\n    }\r\n\r\n    // get a new \"this.CSSColor\" after changing the format above\r\n    this.setCSSColor()\r\n    this.DOM.value.value = this.CSSColor\r\n  },\r\n\r\n  updateRangeSlider(name, value){\r\n    const elm = this.DOM.scope.querySelector(`input[name=\"${name}\"]`)\r\n\r\n    if( !elm ) return\r\n\r\n    elm.value = value\r\n    elm.parentNode.style.setProperty('--value', value)\r\n    elm.parentNode.style.setProperty('--text-value', JSON.stringify(\"\"+Math.round(value)))\r\n\r\n    this.updateCSSVar(name, value)\r\n  },\r\n\r\n  /**\r\n   * sets the CSS color text-value according to the current format\r\n   */\r\n  setCSSColor(){\r\n    this.CSSColor = any_to_hex( HSLAtoCSS(this.color) )\r\n\r\n    if( this.colorFormat == 'rgba' )\r\n      this.CSSColor = hex_rgba(this.CSSColor)\r\n\r\n    else if( this.colorFormat == 'hsla' )\r\n      this.CSSColor = HSLAtoCSS(this.color)\r\n\r\n    this.DOM.scope && this.DOM.scope.setAttribute(\"data-color-format\", this.colorFormat)\r\n    this.settings.onInput(this.CSSColor)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param {Object} hsla {h,s,l,a}\r\n   */\r\n  setColor( value ){\r\n    if( !value ) return\r\n\r\n    value = this.getHSLA(value)\r\n\r\n    this.color = value\r\n    this.setCSSColor()\r\n    this.DOM.scope && this.updateAllCSSVars()\r\n\r\n    if( this.DOM.value  )\r\n      this.DOM.value.value = this.CSSColor\r\n  },\r\n\r\n  updateCSSVar(name, value){\r\n    // this.DOM.value\r\n    this.DOM.scope.style.setProperty(`--${name}`, value)\r\n  },\r\n\r\n  updateAllCSSVars(){\r\n    const hsla = this.NamedHSLA(this.color)\r\n    Object.entries(hsla).forEach(([k, v]) => {\r\n      this.updateRangeSlider(k, v)\r\n    })\r\n  },\r\n\r\n  NamedHSLA( hsla ){\r\n    return {\r\n      \"hue\"        : hsla.h,\r\n      \"saturation\" : hsla.s,\r\n      \"lightness\"  : hsla.l,\r\n      \"alpha\"      : hsla.a\r\n    }\r\n  },\r\n\r\n  build(){\r\n    const template = this.templates.scope.call(this)\r\n    this.DOM.scope = parseHTML(template)\r\n    this.DOM.value = this.DOM.scope.querySelector('input[name=\"value\"]')\r\n    this.DOM.swatches = this.DOM.scope.querySelector('.color-picker__swatches')\r\n  },\r\n\r\n  init(){\r\n    this.build()\r\n    this.setColor(this.color)\r\n    // this.updateAllCSSVars()\r\n    this.bindEvents()\r\n  }\r\n}\r\n\r\nexport { any_to_hex, hex_rgba, rgba_hsla, CSStoHSLA, HSLAtoCSS, changeColorFormat }\r\n\r\nexport default ColorPicker","export default function isObject(obj) {\r\n  return (obj+\"\") === \"[object Object]\"\r\n}\r\n"],"names":["str","DOMParser","parseFromString","trim","body","firstElementChild","color","onInput","_","onChange","buttons","undo","icon","title","format","add","CSStoRGBA","rgba","match","split","map","Number","CSStoHSLA","hsla","Object","assign","v","i","includes","parseFloat","HSLAtoCSS","h","s","l","a","roundNumber","number","toFixed","replace","hex_rgba","hex","rr","gg","bb","aa","CSStoHEX","r","g","b","parseInt","any_to_hex","output","ctx","document","createElement","getContext","fillStyle","rgba_hex","toString","padStart","join","length","Math","round","rgba_hsla","max","min","d","toPrecision","changeColorFormat","toLowerCase","startsWith","slider","name","value","this","settings","swatches","initialSwatches","swatch","isLocked","className","call","onStorage","syncGlobalSwatchesWithLocal","onWheelMove","e","preventDefault","target","delta","sign","deltaY","onkeydown","key","onClickOutside","DOM","scope","contains","type","setColor","onRangeChange","history","last","onValueChange","getHSLA","blur","onButtonClick","parentNode","pNode","classList","swithFormat","addSwatch","removeSwatch","forEach","elm","event","cb","addEventListener","bind","pasive","window","historyChange","CSSColor","_value","pop","item","push","storeKey","data","_store","swatchesLocalStorage","customKey","localStorage","setItem","dispatchEvent","Event","filter","String","sharedSwatches","getSetGlobalSwatches","concat","setTimeout","template","parseHTML","templates","replaceWith","some","swatchesIncludes","swatchElm","prepend","remove","unshift","notColor","ColorPicker","DEFAULTS","defaultFormat","init","prototype","events","getColorFormat","indexOf","result","keys","colorFormat","setCSSColor","updateRangeSlider","querySelector","style","setProperty","JSON","stringify","updateCSSVar","setAttribute","updateAllCSSVars","NamedHSLA","entries","k","build","bindEvents"],"mappings":"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"}