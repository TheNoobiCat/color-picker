.color-picker .range {
  --tickEvery: 400;
  --primaryColor: #000;
  --progress-color: transparent;
  --progress-shadow: unset;
  --value-active-color: white;
  --value-background: white;
  --value-font: 700 12px/1 Arial;
  --fill-color: var(--primaryColor);
  --thumb-size: 21px;
  --track-height: calc(var(--thumb-size)/1.5);
  --thumb-shadow: 0 0 3px rgba(0,0,0,.2);
  --step: 1;
  --completed: calc((var(--value) - var(--min) ) / (var(--max) - var(--min)) * 100);
  --show-min-max: none;
  --LTR: 1;

  @mixin thumb{
    appearance: none;
    height: var(--thumb-size);
    width: var(--thumb-size);
    border-radius: 50%;
    background: var(--thumb-color, white);
    border: 1px solid silver;
    box-shadow: var(--inner-shadow, 0 0), var(--thumb-shadow);
  }

  display: inline-block;
  height: Max(var(--track-height), var(--thumb-size));
  background: none;
  position: relative;
  z-index: 1;
  padding-bottom: 0;
  padding-top: 0;
  margin: 0 0 calc((var(--thumb-size) - var(--track-height)) * -1);

  &__progress {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%) translateZ(0);
    width: 100%;
    height: calc(var(--track-height));
    pointer-events: none;
    z-index: -1;
    box-shadow: var(--progress-shadow);
    border-radius: 20px;
    background: var(--fill-color, white);

    &::after {
      content: unset;
    }
  }

  & > input {
    --thumb-color: transparent;
    --inner-shadow: 0 0 0 calc(var(--thumb-size)/8) inset white;

    -webkit-appearance: none;
    width: 100%;
    height: var(--thumb-size);
    margin: 0;
    cursor: -webkit-grab;
    cursor: grab;
    outline: none;
    background: none;

    &::-webkit-slider-thumb { @include thumb }
    &::-moz-range-thumb { @include thumb }

    &:active {
      opacity: .7;
      cursor: grabbing;
      + output { transition: 0s; }
    }

    &:hover + output {
      --value-background: var(--primaryColor);
      opacity: 1;
      color: var(--value-active-color);
      transform: translate(var(--x-offset), 0);
      box-shadow: 0 0 0 3px var(--value-background);
    }
  }

  & > output {
    --x-offset: calc(var(--completed) * -1% * var(--LTR));
    --pos: calc(((var(--value) - var(--min))/(var(--max) - var(--min))) * 100%);

    opacity: 0;
    pointer-events: none;
    position: absolute;
    z-index: 5;
    background: var(--value-background);
    border-radius: 10px;
    padding: 0 4px;
    top: -3.5ch; // calc(Max(var(--thumb-size), var(--track-height)) * -1);
    left: var(--pos);
    transform: translate(var(--x-offset), 6px);
    transition: all .12s ease-out, left 0s, top 0s;

    &::before {
      --size: 5px;
      content: '';
      top: calc(100% + 2px);
      left: 50%;
      border: solid transparent;
      height: 0;
      width: 0;
      position: absolute;
      pointer-events: none;
      border-top-color: var(--value-background);
      border-width: var(--size);
      margin-left: calc(var(--size) * -1);
      transition: inherit;
    }

    &::after {
      content: var(--text-value);
      font: var(--value-font);
    }
  }
}